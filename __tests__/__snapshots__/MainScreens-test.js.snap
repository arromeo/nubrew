// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main screens render properly renders the CrowdRecScreen 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
/>
`;

exports[`Main screens render properly renders the DetailScreen 1`] = `null`;

exports[`Main screens render properly renders the EventsScreen 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
/>
`;

exports[`Main screens render properly renders the FavoriteScreen 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#61170E",
        "borderRadius": 50,
        "bottom": 20,
        "flex": 1,
        "height": 50,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "right": 19,
        "width": 50,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "#FFBC02",
            "fontSize": 32,
          },
          undefined,
          Object {
            "fontFamily": "ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
</View>
`;

exports[`Main screens render properly renders the FindScreen 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#61170E",
        "borderRadius": 50,
        "bottom": 20,
        "flex": 1,
        "height": 50,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "right": 19,
        "width": 50,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "#FFBC02",
            "fontSize": 32,
          },
          undefined,
          Object {
            "fontFamily": "ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
</View>
`;

exports[`Main screens render properly renders the HomeScreen 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignSelf": "center",
        "margin": 200,
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="orange"
      hidesWhenStopped={true}
      size={100}
    />
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#61170E",
        "borderRadius": 50,
        "bottom": 20,
        "flex": 1,
        "height": 50,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "right": 19,
        "width": 50,
      }
    }
  >
    <Text />
  </View>
  <Text
    style={
      Object {
        "bottom": 20,
        "fontSize": 15,
        "fontWeight": "bold",
        "left": 20,
        "position": "absolute",
      }
    }
  >
    Please drink responsibly.
  </Text>
</View>
`;

exports[`Main screens render properly renders the InventoryScreen 1`] = `null`;

exports[`Main screens render properly renders the ProfileScreen 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignSelf": "center",
        "margin": 150,
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="orange"
      hidesWhenStopped={true}
      size={100}
    />
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "backgroundColor": "#61170E",
        "borderRadius": 50,
        "flex": 0.1,
        "height": 40,
        "justifyContent": "center",
        "opacity": 1,
        "width": "80%",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#FFBC02",
        }
      }
    >
      Logout
    </Text>
  </View>
</View>
`;

exports[`Main screens render properly renders the RateDrinkScreen 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <Text
    style={
      Object {
        "color": "black",
        "fontSize": 15,
        "fontWeight": "bold",
        "justifyContent": "center",
        "paddingTop": 10,
        "textAlign": "center",
        "width": "90%",
      }
    }
  >
    Sorry! This feature is not available if camera permission is not provided.
  </Text>
  <Text
    allowFontScaling={false}
    style={
      Array [
        Object {
          "color": "red",
          "fontSize": 50,
        },
        undefined,
        Object {
          "fontFamily": "ionicons",
          "fontStyle": "normal",
          "fontWeight": "normal",
        },
        Object {},
      ]
    }
  >
    
  </Text>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#61170E",
        "borderRadius": 25,
        "flex": 0.2,
        "justifyContent": "center",
        "marginBottom": 10,
        "marginTop": 10,
        "opacity": 1,
        "padding": 5,
        "width": "75%",
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "yellow",
            "fontSize": 50,
          },
          undefined,
          Object {
            "fontFamily": "ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
</View>
`;

exports[`Main screens render properly renders the RecommendationListScreen 1`] = `null`;

exports[`Main screens render properly renders the RecommendationsScreen 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "alignSelf": "center",
        "margin": 150,
      }
    }
  >
    <ActivityIndicator
      animating={true}
      color="orange"
      hidesWhenStopped={true}
      size={100}
    />
  </View>
  <View
    accessible={true}
    isTVSelectable={true}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#61170E",
        "borderRadius": 50,
        "bottom": 20,
        "flex": 1,
        "height": 50,
        "justifyContent": "center",
        "opacity": 1,
        "position": "absolute",
        "right": 19,
        "width": 50,
      }
    }
  >
    <Text
      allowFontScaling={false}
      style={
        Array [
          Object {
            "color": "#FFBC02",
            "fontSize": 32,
          },
          undefined,
          Object {
            "fontFamily": "ionicons",
            "fontStyle": "normal",
            "fontWeight": "normal",
          },
          Object {},
        ]
      }
    >
      
    </Text>
  </View>
</View>
`;
